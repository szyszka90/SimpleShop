# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: 'pl_PL'
  sender_mail: noreply@simpleshop.com
  admin_mail: m.szyszewski@gmail.com

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    simpleshop.product.repository:
      class: Doctrine\ORM\EntityRepository
      factory: ['@doctrine.orm.default_entity_manager', getRepository]
      arguments:
        - App\Entity\Product

    simpleshop.products.query:
      class: App\Application\Query\DoctrineProductsQuery
      public: true
      arguments:
        $repository: '@simpleshop.product.repository'

    simpleshop.handler.add_product:
      class: App\Application\Command\AddNewProductHandler
      public: true
      tags:
        - { name: command_handler, handles: App\Application\Command\AddNewProductCommand}
      arguments:
        $messageFactory: '@simpleshop:utils.message_factory'
        $localeInformation: '@simpleshop.utils.locale_information'
        $adminMail: '%admin_mail%'

    simpleshop.utils.locale_information:
      class: App\Service\LocaleInformation
      arguments:
        $locale: '%locale%'

    simpleshop:utils.message_factory:
      class: App\Service\MessageFactory
      arguments:
        $from: '%sender_mail%'